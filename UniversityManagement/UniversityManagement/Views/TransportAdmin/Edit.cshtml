@model UniversityManagement.Models.RouteInformations

@{
    //Layout = null;
}


    <style>
        .b-box {
            margin: 26px;
            background-color: #faf8f3;
            padding: 41px;
            border: 1px steelblue;
            border-radius: 25px;
        }

        .bbt {
            width: 26%;
            margin-left: 3em;
        }

        .warning {
            /* color: red; */
            font-weight: 400;
            padding: 10px;
            border-radius: 9px;
            width: 28em;
            text-align: center;
            box-shadow: -1px 4px 1px 1px #34404c;
            margin-bottom: 11px;
        }

        .error {
            color: red;
        }
    </style>
<body>
<div class="container">
    <div class="row ">
        <div class="col-md-12 b-box">
            <center>
                @if (ViewBag.Message != null)
                {

                    <div class="warning" style="background-color: #46e86d;" id="warningLabel">
                        <label>@ViewBag.Message</label>
                    </div>

                }
            </center>
            @using (Html.BeginForm("Edit", "TransportAdmin", FormMethod.Post, new { name = "insertForm", id = "insertForm", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <center>
                        <h3 style="margin-bottom: 25px;">Edit Transport Information</h3>
                    </center>
                    @Html.ValidationSummary(true)

                    <div class="form-group row">
                        <div class="col-md-2"> </div>
                        @Html.LabelFor(model => model.VehicleNo, new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.VehicleNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.VehicleNo)
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-2"> </div>
                        @Html.LabelFor(model => model.UserId, new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            <select name="UserId" class="form-control">
                                <option value="">Select a User</option>
                                @foreach (var v in ViewBag.Users)
                                {
                                    if (v.Id == Model.UserId)
                                    {
                                        <option value="@v.Id" selected="selected">@v.TransportUser</option>
                                        continue;
                                    }
                                    else
                                    {
                                        <option value="@v.Id">@v.TransportUser</option>
                                    }

                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-2"> </div>
                        @Html.LabelFor(model => model.RouteId, new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            <select name="RouteId" class="form-control">
                                <option value="">Select a Route</option>
                                @foreach (var v in ViewBag.Route)
                                {
                                    if (v.Id == Model.RouteId)
                                    {
                                        <option value="@v.Id" selected="selected">@v.RoutesName</option>
                                        continue;
                                    }
                                    else
                                    {
                                        <option value="@v.Id">@v.RoutesName</option>
                                    }

                                }

                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-2"> </div>
                        @Html.LabelFor(model => model.StartTime, new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StartTime)
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-2"> </div>
                        @Html.LabelFor(model => model.DepartureTime, new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.DepartureTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DepartureTime)
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-2"> </div>
                        @Html.LabelFor(model => model.DriverName, new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.DriverName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DriverName)
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-2"> </div>
                        @Html.LabelFor(model => model.Phone, new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phone)
                        </div>
                    </div>


                    <div class="form-group row">

                        <div class="col-md-12" style="position: absolute; text-align: center;">
                            <input type="submit" value="Edit" style="width: 25%" class="btn btn-primary" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12" style="text-align: center; margin-top: 27px;">
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-dark bbt" })
                        </div>
                    </div>
                    <div>
                    </div>
                </div>
            }
        </div>
    </div>

   

</div>



<script src="~/Scripts/jquery.validate.min.js"></script>
<script>
    $(document).ready(function() {
        setTimeout(function() {
            $("#warningLabel").hide(1000).empty();
        }, 5000);
    });
    $("#insertForm").validate({
        rules: {
            VehicleNo: "required",
            RouteId: {
                required: true
            },
            UserId: {
                required: true

            },
            StartTime: {
                required: true

            },

            DepartureTime: {
                required: true
            },

            DriverName: "required",
            Phone: {
                required: true,
                number: true
            }
        },
        messages: {
            VehicleNo: "Please Enter Your VehicleNo",
            RouteId: {
                required: "Please Enter A New RouteId"
            },
            UserId: {
                required: "Please Enter UserId"

            },
            StartTime: "Please Enter StartTime",
            DepartureTime: {
                required: "Please Enter DepartureTime"

            },
            DriverName: {
                required: "Please Enter DriverName"

            },
            Phone: {
                required: "Please Enter Phone",
                number: "Fee should not contain cahracter"
            }


        },
        errorPlacement: function(error, element) {
            if (element.is(":checkbox")) {
                error.appendTo(('.elabel'));
            } else { // This is the default behavior
                error.insertAfter(element);
            }
        }

    });
</script>
</body>
