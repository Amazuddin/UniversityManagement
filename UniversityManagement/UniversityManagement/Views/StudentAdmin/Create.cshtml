@model UniversityManagement.Models.Student

@{
    //Layout = null;
}

<style>
    .b-box {
        margin: 26px;
        /*background-color: aliceblue;*/
        padding: 41px;
        border: 1px steelblue;
        border-radius: 25px;
        box-shadow: 0px 0px 20px #d8d4d4;
        background-color: #faf8f3;
    }

    .bbt {
        width: 31%;
        /*margin-left: 21em;*/
    }
    .error {
        color: red;
    }
</style>

<div class="container">
    <div class="row">
        <div class="col-md-12 b-box">

            @using (Html.BeginForm("Create", "StudentAdmin", FormMethod.Post, new { name = "insertForm", id = "insertForm", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <center>
                        <h2 style="margin-bottom: 20px;">Add Student</h2>
                    </center>
                    @Html.ValidationSummary(true)
                    <div class="form-group row">
                        <div class="col-md-2"> </div>
                        @Html.LabelFor(model => model.DepartmentId, new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            <select name="DepartmentId" class="form-control">
                                <option value="">Select Category</option>
                                @foreach (var v in ViewBag.Department)
                                {
                                    <option value="@v.Id">@v.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-2"> </div>
                        @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name)
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-2"> </div>
                        @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email)
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-2"> </div>
                        @Html.LabelFor(model => model.RegistrationNo, new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.RegistrationNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RegistrationNo)
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-2"> </div>
                        @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address)
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-2"> </div>
                        @Html.LabelFor(model => model.ContactNo, new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ContactNo)
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-2"> </div>
                        @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password)
                        </div>
                    </div>


                    <div class="form-group row">
                        <div class="col-md-12" style="position: absolute; text-align: center;">
                            <input type="submit" value="Create" style="width: 25%;" class="btn btn-primary" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12" style="text-align: center; margin-top: 27px;">
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-warning bbt" })
                        </div>
                    </div>

                </div>
            }
        </div>
    </div>
   

</div>
@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script>
        $("#insertForm").validate({
            rules: {
                Name: "required",
                Email: {
                    required: true,
                    email: true
                },
                Address: {
                    required: true

                },

                ContactNo: {
                    required: true,
                    number:true
                },

                DepartmentId: "required",
                RegistrationNo: "required",
                Password: {
                    required:true
                }
            },
            messages: {
                Name: "Please Enter a Student Name",
                Email: {
                    required: "Please Enter A New Email id",
                    email: "Email id not correct"
                },

                Address: "Please Select Address",
                ContactNo: {
                    required: "Please Enter Teacher's Degrees",
                    number:"Must be number"

                },
                RegistrationNo: "Please Enter Student's RegistrationNo",
                DepartmentId: "Please Select Department",
                Password: {
                required:"Please enter a Password"
        }
            }

        });
    </script>
}